{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/PlateList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Plate from \"./Plate\";\n\nvar PlateList = function (_Component) {\n  _inherits(PlateList, _Component);\n\n  var _super = _createSuper(PlateList);\n\n  function PlateList(props) {\n    var _this;\n\n    _classCallCheck(this, PlateList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(PlateList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n\n      request.onreadystatechange = function (e) {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          console.log('success', JSON.parse(request.responseText));\n\n          _this2.setState({\n            data: JSON.parse(request.responseText).plates,\n            isLoading: false\n          });\n        } else {\n          console.warn('error');\n        }\n      };\n\n      request.open('GET', 'http://127.0.0.1:8000/restaurant/plates');\n      request.setRequestHeader(\"Content-Type\", \"application/json\");\n      request.send();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading;\n      console.log(this.state);\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 24\n        },\n        id: \"PlatesList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }\n      }, isLoading ? React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 22\n        }\n      }) : React.createElement(FlatList, {\n        data: data,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Plate, {\n            item: item,\n            ordered: false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return PlateList;\n}(Component);\n\nexport default PlateList;","map":{"version":3,"sources":["/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/PlateList.js"],"names":["React","Component","Plate","PlateList","props","state","data","isLoading","request","XMLHttpRequest","onreadystatechange","e","readyState","status","console","log","JSON","parse","responseText","setState","plates","warn","open","setRequestHeader","send","flex","padding","item"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,OAAOC,KAAP;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFiB;AAMlB;;;;wCAEmB;AAAA;;AAEhB,UAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;;AACND,MAAAA,OAAO,CAACE,kBAAR,GAA6B,UAACC,CAAD,EAAO;AAClC,YAAIH,OAAO,CAACI,UAAR,KAAuB,CAA3B,EAA8B;AAC5B;AACD;;AAED,YAAIJ,OAAO,CAACK,MAAR,KAAmB,GAAvB,EAA4B;AAC1BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,YAAnB,CAAvB;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AAACb,YAAAA,IAAI,EAAEU,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,YAAnB,EAAiCE,MAAxC;AAAgDb,YAAAA,SAAS,EAAE;AAA3D,WAAd;AACD,SAHD,MAGO;AACLO,UAAAA,OAAO,CAACO,IAAR,CAAa,OAAb;AACD;AACF,OAXD;;AAaAb,MAAAA,OAAO,CAACc,IAAR,CAAa,KAAb,EAAoB,yCAApB;AACAd,MAAAA,OAAO,CAACe,gBAAR,CAAyB,cAAzB,EAAyC,kBAAzC;AACAf,MAAAA,OAAO,CAACgB,IAAR;AAGG;;;6BAGQ;AAAA,wBACmB,KAAKnB,KADxB;AAAA,UACDC,IADC,eACDA,IADC;AAAA,UACKC,SADL,eACKA,SADL;AAETO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACE,aAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEoB,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAE;AAApB,SAAb;AACQ,QAAA,EAAE,EAAC,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKnB,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACN,oBAAC,QAAD;AACA,QAAA,IAAI,EAAED,IADN;AAEA,QAAA,UAAU,EAAE;AAAA,cAAGqB,IAAH,QAAGA,IAAH;AAAA,iBACV,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAEA,IAAb;AAAmB,YAAA,OAAO,EAAE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,CAFA;AAcD;;;;EAlDqB1B,S;;AAqDxB,eAAeE,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {FlatList, ActivityIndicator, Text, View, Button} from 'react-native';\nimport Plate from './Plate';\n\nclass PlateList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n\n      var request = new XMLHttpRequest();\nrequest.onreadystatechange = (e) => {\n  if (request.readyState !== 4) {\n    return;\n  }\n\n  if (request.status === 200) {\n    console.log('success', JSON.parse(request.responseText));\n    this.setState({data: JSON.parse(request.responseText).plates, isLoading: false})\n  } else {\n    console.warn('error');\n  }\n};\n\nrequest.open('GET', 'http://127.0.0.1:8000/restaurant/plates');\nrequest.setRequestHeader(\"Content-Type\", \"application/json\");\nrequest.send();\n\n\n  }\n\n\n  render() {\n  const { data, isLoading } = this.state;\n  console.log(this.state)\n    return (\n\n    <View style={{ flex: 1, padding: 24 }}\n            id='PlatesList'>\n        {isLoading ? <ActivityIndicator/> : (\n            <FlatList\n            data={data}\n            renderItem={({ item }) => (\n              <Plate item={item} ordered={false}/>\n            )}\n          />\n        )}\n    </View>\n    );\n  }\n}\n\nexport default PlateList;\n"]},"metadata":{},"sourceType":"module"}