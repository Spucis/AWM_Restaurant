{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/PlateList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar PlateList = function (_Component) {\n  _inherits(PlateList, _Component);\n\n  var _super = _createSuper(PlateList);\n\n  function PlateList(props) {\n    var _this;\n\n    _classCallCheck(this, PlateList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      isLoading: true,\n      placeholder: \"Loading\"\n    };\n    return _this;\n  }\n\n  _createClass(PlateList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var Frisbee = require('frisbee');\n\n      var res = 0;\n      var api = new Frisbee({\n        baseURI: 'http://localhost:8000/',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      fetch(\"http://localhost:8000/restaurant/plates\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          data: json.plates\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      }).finally(function () {\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading,\n          placeholder = _this$state.placeholder;\n      console.log(this.state);\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }\n      }, isLoading ? React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 22\n        }\n      }) : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, \"BOOM\"));\n    }\n  }]);\n\n  return PlateList;\n}(Component);\n\nexport default PlateList;","map":{"version":3,"sources":["/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/PlateList.js"],"names":["React","Component","PlateList","props","state","data","isLoading","placeholder","Frisbee","require","res","api","baseURI","headers","fetch","then","response","json","setState","plates","catch","error","console","finally","log","flex","padding"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;IAGMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClB,UAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,UAAIC,GAAG,GAAG,CAAV;AAGA,UAAMC,GAAG,GAAG,IAAIH,OAAJ,CAAY;AACtBI,QAAAA,OAAO,EAAE,wBADa;AAEtBC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAFa,OAAZ,CAAZ;AAOAC,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACCC,IADD,CACM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADN,EAEGF,IAFH,CAEQ,UAACE,IAAD,EAAU;AACd,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEb,UAAAA,IAAI,EAAEY,IAAI,CAACE;AAAb,SAAd;AACD,OAJH,EAKGC,KALH,CAKS,UAACC,KAAD;AAAA,eAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,OALT,EAMGE,OANH,CAMW,YAAM;AACb,QAAA,MAAI,CAACL,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OARH;AASD;;;6BAEQ;AAAA,wBACgC,KAAKF,KADrC;AAAA,UACDC,IADC,eACDA,IADC;AAAA,UACKC,SADL,eACKA,SADL;AAAA,UACgBC,WADhB,eACgBA,WADhB;AAETe,MAAAA,OAAO,CAACE,GAAR,CAAY,KAAKpB,KAAjB;AACE,aAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEqB,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAE;AAApB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKpB,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,CAFA;AAeD;;;;EAnDqBL,S;;AAsDxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {FlatList, ActivityIndicator, Text, View} from 'react-native';\n\nclass PlateList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoading: true,\n      placeholder: \"Loading\",\n    };\n  }\n\n  componentDidMount() {\n    const Frisbee = require('frisbee');\n    let res = 0;\n\n    // create a new instance of Frisbee\n    const api = new Frisbee({\n      baseURI: 'http://localhost:8000/', // optional\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    fetch(\"http://localhost:8000/restaurant/plates\")\n    .then((response) => response.json())\n      .then((json) => {\n        this.setState({ data: json.plates });\n      })\n      .catch((error) => console.error(error))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  }\n\n  render() {\n  const { data, isLoading, placeholder } = this.state;\n  console.log(this.state)\n    return (\n\n    <View style={{ flex: 1, padding: 24 }}>\n        {isLoading ? <ActivityIndicator/> : (\n            <Text>BOOM</Text>\n          /*<FlatList\n            data={data}\n            keyExtractor={({ id }, index) => id}\n            renderItem={({ item }) => (\n              <Text>{item.name}, {item.price}</Text>\n            )}\n          />*/\n        )}\n      </View>\n    );\n  }\n}\n\nexport default PlateList;"]},"metadata":{},"sourceType":"module"}