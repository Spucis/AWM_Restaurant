{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/UpdateButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar UpdateButton = function (_Component) {\n  _inherits(UpdateButton, _Component);\n\n  var _super = _createSuper(UpdateButton);\n\n  function UpdateButton(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateButton);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      loaded: false\n    };\n    _this.updateOrder = _this.updateOrder.bind(_assertThisInitialized(_this));\n    _this.sendPUT = _this.sendPUT.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(UpdateButton, [{\n    key: \"sendPUT\",\n    value: function sendPUT(obj) {\n      var _this2 = this;\n\n      var json_obj = JSON.stringify(obj);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function (e) {\n        if (xhr.readyState === 4) {\n          var resp = JSON.parse(xhr.response);\n          console.log(\"RISPOSTA PUT UPDATE ORDER\");\n          console.log(resp.resp);\n\n          _this2.props.navigation.navigate('Home');\n\n          _this2.props.navigation.navigate('Details', {\n            order_code: _this2.props.order_code\n          });\n        }\n      };\n\n      xhr.open(\"PUT\", \"http://192.168.1.33:8000/restaurant/m/order\", true);\n      xhr.setRequestHeader(\"Content-type\", \"application/json\");\n      xhr.send(json_obj);\n    }\n  }, {\n    key: \"updateOrder\",\n    value: function updateOrder() {\n      var current_order = this.props.order;\n      this.sendPUT({\n        \"order_id\": this.props.order_code,\n        \"plates\": current_order\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Button, {\n        title: \"Update Order\",\n        onPress: function onPress() {\n          _this3.updateOrder();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }\n      });\n    }\n  }]);\n\n  return UpdateButton;\n}(Component);\n\nexport default UpdateButton;","map":{"version":3,"sources":["/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/UpdateButton.js"],"names":["React","Component","render","UpdateButton","props","state","data","loaded","updateOrder","bind","sendPUT","obj","json_obj","JSON","stringify","xhr","XMLHttpRequest","onreadystatechange","e","readyState","resp","parse","response","console","log","navigation","navigate","order_code","open","setRequestHeader","send","current_order","order"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;;;;;;;IAGMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,+BAAf;AAPiB;AAQlB;;;;4BAEQE,G,EACR;AAAA;;AAED,UAAIC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAAf;AAEM,UAAII,GAAG,GAAG,IAAIC,cAAJ,EAAV;;AACND,MAAAA,GAAG,CAACE,kBAAJ,GAAyB,UAACC,CAAD,EACzB;AACC,YAAIH,GAAG,CAACI,UAAJ,KAAmB,CAAvB,EACA;AACI,cAAIC,IAAI,GAAGP,IAAI,CAACQ,KAAL,CAAWN,GAAG,CAACO,QAAf,CAAX;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACA,IAAjB;;AACA,UAAA,MAAI,CAAChB,KAAL,CAAWqB,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B;;AACS,UAAA,MAAI,CAACtB,KAAL,CAAWqB,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B,EAAyC;AAAEC,YAAAA,UAAU,EAAE,MAAI,CAACvB,KAAL,CAAWuB;AAAzB,WAAzC;AACZ;AACD,OAVD;;AAYAZ,MAAAA,GAAG,CAACa,IAAJ,CAAS,KAAT,EAAgB,6CAAhB,EAA+D,IAA/D;AACAb,MAAAA,GAAG,CAACc,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;AAEAd,MAAAA,GAAG,CAACe,IAAJ,CAASlB,QAAT;AACE;;;kCAEW;AAEb,UAAImB,aAAa,GAAG,KAAK3B,KAAL,CAAW4B,KAA/B;AAiBE,WAAKtB,OAAL,CAAa;AAAC,oBAAY,KAAKN,KAAL,CAAWuB,UAAxB;AAAoC,kBAAUI;AAA9C,OAAb;AACD;;;6BAEQ;AAAA;;AACP,aACA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,cAAd;AAA6B,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACvB,WAAL;AAEC,SAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAKD;;;;EA/DwBP,S;;AAkE3B,eAAeE,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport {FlatList, ActivityIndicator, Text, View, Button} from 'react-native';\n\nclass UpdateButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loaded: false,\n    };\n    this.updateOrder = this.updateOrder.bind(this)\n    this.sendPUT = this.sendPUT.bind(this)\n  }\n\n   sendPUT(obj)\n   {\n        //const csrftoken = Cookies.get('csrftoken');\n\t\tvar json_obj = JSON.stringify(obj);\n\n        var xhr = new XMLHttpRequest();\n\t\txhr.onreadystatechange = (e) =>\n\t\t{\n\t\t\tif (xhr.readyState === 4)\n\t\t\t{\n\t\t\t    var resp = JSON.parse(xhr.response);\n\t\t\t    console.log(\"RISPOSTA PUT UPDATE ORDER\")\n\t\t\t    console.log(resp.resp)\n\t\t\t    this.props.navigation.navigate('Home');\n                this.props.navigation.navigate('Details',{ order_code: this.props.order_code });\n\t\t\t}\n\t\t}\n\n\t\txhr.open(\"PUT\", \"http://192.168.1.33:8000/restaurant/m/order\", true);\n\t\txhr.setRequestHeader(\"Content-type\", \"application/json\");\n\t\t//xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n\t\txhr.send(json_obj);\n   }\n\n  updateOrder(){\n  // MAKE THE UPDATED ORDER THEN USE PUT TO THE SERVER\n  var current_order = this.props.order\n  /*\n  console.log(\"DIZIONARIO IN UPDATE ORDER\")\n    console.log(current_order)\n    var value\n    for(var idx in current_order){\n        if(current_order.hasOwnProperty(idx)){\n            console.log(\"INDEX \"+idx)\n            console.log(current_order[idx])\n\n            value = document.getElementById(idx+'_pad').value\n            current_order[idx] += +value\n        }\n    }\n    console.log(current_order)\n    console.log(\"FINE UPDATE ORDER\")\n    */\n    this.sendPUT({\"order_id\": this.props.order_code, \"plates\": current_order})\n  }\n\n  render() {\n    return (\n    <Button title=\"Update Order\" onPress={() => {this.updateOrder();\n\n                                                 }} />\n    );\n  }\n}\n\nexport default UpdateButton;\n"]},"metadata":{},"sourceType":"module"}