{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/PlateList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar PlateList = function (_Component) {\n  _inherits(PlateList, _Component);\n\n  var _super = _createSuper(PlateList);\n\n  function PlateList(props) {\n    var _this;\n\n    _classCallCheck(this, PlateList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      isLoading: true,\n      placeholder: \"Loading\"\n    };\n    return _this;\n  }\n\n  _createClass(PlateList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var Frisbee = require('frisbee');\n\n      var api = new Frisbee({\n        baseURI: 'http://localhost:8000/',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      (function _callee() {\n        var res;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(api.get(\"restaurant/plates\", {\n                  mode: 'no-cors',\n                  raw: true\n                }));\n\n              case 2:\n                res = _context.sent;\n                res = (_readOnlyError(\"res\"), res.json());\n\n                _this2.setState({\n                  data: res['plates']\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading,\n          placeholder = _this$state.placeholder;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, \" \", data, \" \"), isLoading ? React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }\n      }) : React.createElement(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(_ref, index) {\n          var id = _ref.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }\n          }, item.name, \", \", item.price);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return PlateList;\n}(Component);\n\nexport default PlateList;","map":{"version":3,"sources":["/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/PlateList.js"],"names":["React","Component","PlateList","props","state","data","isLoading","placeholder","Frisbee","require","api","baseURI","headers","get","mode","raw","res","json","setState","flex","padding","index","id","item","name","price"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;IAGMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClB,UAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAGA,UAAMC,GAAG,GAAG,IAAIF,OAAJ,CAAY;AACtBG,QAAAA,OAAO,EAAE,wBADa;AAEtBC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAFa,OAAZ,CAAZ;;AAOA,OAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAEiBF,GAAG,CAACG,GAAJ,CAAQ,mBAAR,EAA6B;AAC3CC,kBAAAA,IAAI,EAAE,SADqC;AAE3CC,kBAAAA,GAAG,EAAE;AAFsC,iBAA7B,CAFjB;;AAAA;AAEKC,gBAAAA,GAFL;AAQDA,gBAAAA,GAAG,2BAAGA,GAAG,CAACC,IAAJ,EAAH,CAAH;;AACA,gBAAA,MAAI,CAACC,QAAL,CAAc;AAACb,kBAAAA,IAAI,EAAEW,GAAG,CAAC,QAAD;AAAV,iBAAd;;AATC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;AAqBD;;;6BAEQ;AAAA,wBACgC,KAAKZ,KADrC;AAAA,UACDC,IADC,eACDA,IADC;AAAA,UACKC,SADL,eACKA,SADL;AAAA,UACgBC,WADhB,eACgBA,WADhB;AAEP,aAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEY,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAE;AAApB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQf,IAAR,MADJ,EAEKC,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACR,oBAAC,QAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,YAAY,EAAE,4BAASgB,KAAT;AAAA,cAAGC,EAAH,QAAGA,EAAH;AAAA,iBAAmBA,EAAnB;AAAA,SAFhB;AAGE,QAAA,UAAU,EAAE;AAAA,cAAGC,IAAH,SAAGA,IAAH;AAAA,iBACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOA,IAAI,CAACC,IAAZ,QAAoBD,IAAI,CAACE,KAAzB,CADU;AAAA,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHN,CAFA;AAeD;;;;EA7DqBxB,S;;AAgExB,eAAeC,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {FlatList, ActivityIndicator, Text, View} from 'react-native';\n\nclass PlateList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoading: true,\n      placeholder: \"Loading\",\n    };\n  }\n\n  componentDidMount() {\n    const Frisbee = require('frisbee');\n\n    // create a new instance of Frisbee\n    const api = new Frisbee({\n      baseURI: 'http://localhost:8000/', // optional\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    (async () => {\n    // this is a simple example using `.then` and `.catch`\n    const res = await api.get(\"restaurant/plates\", {\n        mode: 'no-cors',\n        raw: true,\n      })\n\n\n    res = res.json()\n    this.setState({data: res['plates']})\n    })\n    /*\n      .then(response => response.json())\n      .then(response => {\n        this.setState({data: response})\n      })\n      .catch((error) => console.error(error))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n      */\n  }\n\n  render() {\n  const { data, isLoading, placeholder } = this.state;\n    return (\n\n    <View style={{ flex: 1, padding: 24 }}>\n        <Text> {data} </Text>\n        {isLoading ? <ActivityIndicator/> : (\n          <FlatList\n            data={data}\n            keyExtractor={({ id }, index) => id}\n            renderItem={({ item }) => (\n              <Text>{item.name}, {item.price}</Text>\n            )}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default PlateList;"]},"metadata":{},"sourceType":"module"}