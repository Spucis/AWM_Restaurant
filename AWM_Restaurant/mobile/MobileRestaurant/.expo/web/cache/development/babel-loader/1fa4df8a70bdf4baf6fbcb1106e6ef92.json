{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/PlateList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Plate from \"./Plate\";\n\nvar PlateList = function (_Component) {\n  _inherits(PlateList, _Component);\n\n  var _super = _createSuper(PlateList);\n\n  function PlateList(props) {\n    var _this;\n\n    _classCallCheck(this, PlateList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      current_order: {},\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(PlateList, [{\n    key: \"initOrder\",\n    value: function initOrder() {\n      console.log(\"INIT ORDER...\");\n      console.log(this.state.data);\n      var curr_order = {};\n\n      for (var plate_idx in this.state.data) {\n        curr_order[this.state.data[plate_idx].code] = 0;\n      }\n\n      this.setState({\n        current_order: curr_order\n      });\n      console.log(this.state.current_order);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n\n      request.onreadystatechange = function (e) {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          _this2.setState({\n            data: JSON.parse(request.responseText).plates,\n            isLoading: false\n          });\n\n          _this2.initOrder();\n        } else {\n          console.warn('error');\n        }\n      };\n\n      request.open('GET', 'http://127.0.0.1:8000/restaurant/plates');\n      request.setRequestHeader(\"Content-Type\", \"application/json\");\n      request.send();\n    }\n  }, {\n    key: \"onClickPlate\",\n    value: function onClickPlate(item, value) {\n      console.log(\"RECEIVED\");\n      console.log(item);\n      console.log(value);\n      curr_order = this.state.current_order;\n      curr_order[item.code] += value;\n      this.setState({\n        current_order: curr_order\n      });\n      console.log(\"UPDATED ORDER:\");\n      console.log(this.state.current_order);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 24\n        },\n        id: \"PlatesList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }\n      }, isLoading ? React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 22\n        }\n      }) : React.createElement(FlatList, {\n        data: data,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Plate, {\n            item: item,\n            ordered: false,\n            clicked: false,\n            onClick: _this3.onClickPlate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return PlateList;\n}(Component);\n\nexport default PlateList;","map":{"version":3,"sources":["/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/PlateList.js"],"names":["React","Component","Plate","PlateList","props","state","data","current_order","isLoading","console","log","curr_order","plate_idx","code","setState","request","XMLHttpRequest","onreadystatechange","e","readyState","status","JSON","parse","responseText","plates","initOrder","warn","open","setRequestHeader","send","item","value","flex","padding","onClickPlate"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAEA,OAAOC,KAAP;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAFiB;AAQlB;;;;gCAEU;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,IAAvB;AACA,UAAIK,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAIC,SAAT,IAAsB,KAAKP,KAAL,CAAWC,IAAjC,EAAsC;AAClCK,QAAAA,UAAU,CAAC,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,SAAhB,EAA2BC,IAA5B,CAAV,GAA8C,CAA9C;AACH;;AACD,WAAKC,QAAL,CAAc;AAACP,QAAAA,aAAa,EAAEI;AAAhB,OAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWE,aAAvB;AACD;;;wCAEmB;AAAA;;AAEhB,UAAIQ,OAAO,GAAG,IAAIC,cAAJ,EAAd;;AACND,MAAAA,OAAO,CAACE,kBAAR,GAA6B,UAACC,CAAD,EAAO;AAClC,YAAIH,OAAO,CAACI,UAAR,KAAuB,CAA3B,EAA8B;AAC5B;AACD;;AAED,YAAIJ,OAAO,CAACK,MAAR,KAAmB,GAAvB,EAA4B;AAE1B,UAAA,MAAI,CAACN,QAAL,CAAc;AAACR,YAAAA,IAAI,EAAEe,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,YAAnB,EAAiCC,MAAxC;AAAgDhB,YAAAA,SAAS,EAAE;AAA3D,WAAd;;AACA,UAAA,MAAI,CAACiB,SAAL;AACD,SAJD,MAIO;AACLhB,UAAAA,OAAO,CAACiB,IAAR,CAAa,OAAb;AACD;AACF,OAZD;;AAcAX,MAAAA,OAAO,CAACY,IAAR,CAAa,KAAb,EAAoB,yCAApB;AACAZ,MAAAA,OAAO,CAACa,gBAAR,CAAyB,cAAzB,EAAyC,kBAAzC;AACAb,MAAAA,OAAO,CAACc,IAAR;AAGG;;;iCAEYC,I,EAAMC,K,EAAM;AACvBtB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAZ;AACArB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,KAAZ;AAEApB,MAAAA,UAAU,GAAG,KAAKN,KAAL,CAAWE,aAAxB;AACAI,MAAAA,UAAU,CAACmB,IAAI,CAACjB,IAAN,CAAV,IAAyBkB,KAAzB;AACA,WAAKjB,QAAL,CAAc;AAACP,QAAAA,aAAa,EAAEI;AAAhB,OAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWE,aAAvB;AACD;;;6BACQ;AAAA;;AAAA,wBACmB,KAAKF,KADxB;AAAA,UACDC,IADC,eACDA,IADC;AAAA,UACKE,SADL,eACKA,SADL;AAGP,aAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEwB,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAE;AAApB,SAAb;AACQ,QAAA,EAAE,EAAC,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKzB,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACN,oBAAC,QAAD;AACA,QAAA,IAAI,EAAEF,IADN;AAEA,QAAA,UAAU,EAAE;AAAA,cAAGwB,IAAH,QAAGA,IAAH;AAAA,iBACV,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAEA,IAAb;AAAmB,YAAA,OAAO,EAAE,KAA5B;AAAmC,YAAA,OAAO,EAAE,KAA5C;AAAmD,YAAA,OAAO,EAAE,MAAI,CAACI,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,CAFA;AAeD;;;;EA3EqBjC,S;;AA8ExB,eAAeE,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {FlatList, ActivityIndicator, Text, TextInput, View, Button} from 'react-native';\nimport Plate from './Plate';\n\nclass PlateList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      // MAPPING plate_code: quantity\n      current_order: {},\n      isLoading: true,\n    };\n  }\n\n  initOrder(){\n    console.log(\"INIT ORDER...\")\n    console.log(this.state.data)\n    var curr_order = {}\n    for (var plate_idx in this.state.data){\n        curr_order[this.state.data[plate_idx].code] = 0\n    }\n    this.setState({current_order: curr_order})\n    console.log(this.state.current_order)\n  }\n\n  componentDidMount() {\n\n      var request = new XMLHttpRequest();\nrequest.onreadystatechange = (e) => {\n  if (request.readyState !== 4) {\n    return;\n  }\n\n  if (request.status === 200) {\n    //console.log('success', JSON.parse(request.responseText));\n    this.setState({data: JSON.parse(request.responseText).plates, isLoading: false})\n    this.initOrder()\n  } else {\n    console.warn('error');\n  }\n};\n\nrequest.open('GET', 'http://127.0.0.1:8000/restaurant/plates');\nrequest.setRequestHeader(\"Content-Type\", \"application/json\");\nrequest.send();\n\n\n  }\n\n  onClickPlate(item, value){\n    console.log(\"RECEIVED\")\n    console.log(item)\n    console.log(value)\n\n    curr_order = this.state.current_order\n    curr_order[item.code] += value\n    this.setState({current_order: curr_order})\n    console.log(\"UPDATED ORDER:\")\n    console.log(this.state.current_order)\n  }\n  render() {\n  const { data, isLoading } = this.state;\n  //console.log(this.state)\n    return (\n\n    <View style={{ flex: 1, padding: 24 }}\n            id='PlatesList'>\n        {isLoading ? <ActivityIndicator/> : (\n            <FlatList\n            data={data}\n            renderItem={({ item }) => (\n              <Plate item={item} ordered={false} clicked={false} onClick={this.onClickPlate}/>\n\n            )}\n          />\n        )}\n    </View>\n    );\n  }\n}\n\nexport default PlateList;\n"]},"metadata":{},"sourceType":"module"}