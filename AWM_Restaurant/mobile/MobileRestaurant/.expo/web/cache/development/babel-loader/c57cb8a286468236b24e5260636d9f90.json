{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/PlateList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar PlateList = function (_Component) {\n  _inherits(PlateList, _Component);\n\n  var _super = _createSuper(PlateList);\n\n  function PlateList(props) {\n    var _this;\n\n    _classCallCheck(this, PlateList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      isLoading: true,\n      placeholder: \"Loading\"\n    };\n    return _this;\n  }\n\n  _createClass(PlateList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:8000/restaurant/plates\").then(function (response) {\n        if (response.status > 400) {\n          return _this2.setState(function () {\n            return {\n              placeholder: \"Something went wrong!\"\n            };\n          });\n        }\n\n        return response.json();\n      }).then(function (data) {\n        _this2.setState(function () {\n          return {\n            data: data['plates'],\n            loaded: false\n          };\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }\n      }, isLoading ? React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }\n      }) : React.createElement(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(_ref, index) {\n          var id = _ref.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }\n          }, item.name, \", \", item.price);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return PlateList;\n}(Component);\n\nexport default PlateList;","map":{"version":3,"sources":["/home/marco/Desktop/AWM_restaurant/AWM_Restaurant/mobile/MobileRestaurant/PlateList.js"],"names":["React","Component","PlateList","props","state","data","isLoading","placeholder","fetch","then","response","status","setState","json","loaded","catch","error","console","flex","padding","index","id","item","name","price"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;IAGMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,YAAIA,QAAQ,CAACC,MAAT,GAAkB,GAAtB,EAA2B;AACzB,iBAAO,MAAI,CAACC,QAAL,CAAc,YAAM;AACzB,mBAAO;AAAEL,cAAAA,WAAW,EAAE;AAAf,aAAP;AACD,WAFM,CAAP;AAGD;;AACD,eAAOG,QAAQ,CAACG,IAAT,EAAP;AACD,OARH,EASGJ,IATH,CASQ,UAAAJ,IAAI,EAAI;AACZ,QAAA,MAAI,CAACO,QAAL,CAAc,YAAM;AAClB,iBAAO;AACLP,YAAAA,IAAI,EAAEA,IAAI,CAAC,QAAD,CADL;AAELS,YAAAA,MAAM,EAAE;AAFH,WAAP;AAID,SALD;AAMD,OAhBH,EAiBIC,KAjBJ,CAiBU,UAACC,KAAD,EAAW;AACnBC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAnBD;AAoBD;;;6BAEQ;AAAA,wBACmB,KAAKZ,KADxB;AAAA,UACDC,IADC,eACDA,IADC;AAAA,UACKC,SADL,eACKA,SADL;AAEP,aACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEY,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAE;AAApB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKb,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACR,oBAAC,QAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,YAAY,EAAE,4BAASe,KAAT;AAAA,cAAGC,EAAH,QAAGA,EAAH;AAAA,iBAAmBA,EAAnB;AAAA,SAFhB;AAGE,QAAA,UAAU,EAAE;AAAA,cAAGC,IAAH,SAAGA,IAAH;AAAA,iBACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOA,IAAI,CAACC,IAAZ,QAAoBD,IAAI,CAACE,KAAzB,CADU;AAAA,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFN,CADA;AAaD;;;;EAhDqBvB,S;;AAmDxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {FlatList, ActivityIndicator, Text, View} from 'react-native';\n\nclass PlateList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoading: true,\n      placeholder: \"Loading\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8000/restaurant/plates\")\n      .then(response => {\n        if (response.status > 400) {\n          return this.setState(() => {\n            return { placeholder: \"Something went wrong!\" };\n          });\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState(() => {\n          return {\n            data: data['plates'],\n            loaded: false\n          };\n        });\n      }\n      ).catch((error) => {\n      console.error(error);\n    });\n  }\n\n  render() {\n  const { data, isLoading } = this.state;\n    return (\n    <View style={{ flex: 1, padding: 24 }}>\n        {isLoading ? <ActivityIndicator/> : (\n          <FlatList\n            data={data}\n            keyExtractor={({ id }, index) => id}\n            renderItem={({ item }) => (\n              <Text>{item.name}, {item.price}</Text>\n            )}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default PlateList;"]},"metadata":{},"sourceType":"module"}